include head

.container-fluid

    h3 Abstract
    p.text This analysis looks at Brasil, Chile, Colombia, and Paraguay. The list of website analyzed can be updated at any time by Tedic, the project coordinator. The invi.sible.link system examines them every day, but the analysis reported here are the footprints of javascript functions. a group of partner, Tedic, and I, worked on this project, here is the 
        a(href="https://github.com/vecna/gobwebsecpy") list of website analyzed
        |. The invi.sible.link system examines them every day, but the analysis report here are based on one day of observation.

    h3 Tedic
    p.text 
        a(href="https://www.tedic.org") Tedic
        |  is an NGO working on civic technology and digital rights.
    p.text They are working on the Observatorio Latinoamericano de Páginas Estatales (OLPE), an advocacy project. OLPE will be released soon but is not yet ready for the public announcement. Tedic is running their instance of invi.sible.link software. OLPE has four organizations belonging to different Latin American nations, CodingRights is among them.

.container-fluid

    h3 Analysis and Findings
    p.text we begin with
        b Viz#1
        |  and 
        b Viz#2
        |, as used in the previous chapter

    img.img-responsive(src="/images/PY-gob-companies.png")
    img.img-responsive(src="/images/PY-gob-3rd.png")
    img.img-responsive(src="/images/CL-gob-companies.png")
    img.img-responsive(src="/images/CL-gob-3rd.png")

    p.text Colombia is not reported because of the number of website analyzed, just lead to a visualization which don't scale. This is a tip to keep in account when running comparative analysis among cluster:
    ul
        li The number of website has to be the same
        li Comparisong should happen between website of the same kind. Media, healthcare, or government have different monetization strategy, internet traffic challenges and accessibility duties.

    p.text It is possible consult with a dedicated UX the 
        a(href="https://public.tableau.com/profile/claudio.of.tracking.exposed#!/vizhome/Finalreport-visualizations/Gob-CO-Co") Colombian visualizations 
        |.

    h2 User's fingerprinting via Javascript execution

    p.text There are well-known technologies permitting to track a user even without cookies. Policy and institution regulated the cookies, they are old technology, one of the many which have been regulated, but browser fingerprint permits to third-party trackers to get the same benefit escaping from users, policy or browser control. 
    p.text This analysis is inspired by the 2014 paper "
        a(href="https://www.chromium.org/Home/chromium-security/client-identification-mechanisms") Technical analysis of client identification mechanisms
        |", and by 
        a(href="https://panopticlick.eff.org/") Panopticlick
        |. Javascript function can be used to extract information from the browser. This information produces a certain amount of fingerprinting bits, usable to track users also without cookies or across multiple browsers.

    p.text invi.sible.link looks at the following javascript call (I'm reporting this list here because the visualization below reference the calls through the [letters]

    p.small
        pre.
            navigator.userAgent ⟶ [uA]
            navigator.language ⟶ [l]
            window.devicePixelRatio ⟶ [pix]
            navigator.languages ⟶ [L]
            screen.colorDepth ⟶ [colorD]
            navigator.hardwareConcurrency ⟶ [hw]
            navigator.cpuClass ⟶ [cpu]
            navigator.platform ⟶ [platform]
            navigator.doNotTrack ⟶ [dNT]
            navigator.maxTouchPoints ⟶ [maxTouch]
            screen.width ⟶ [width]
            screen.availWidth ⟶ [availW]
            Date.prototype.getTimezoneOffset ⟶ [getTZ]
            window.sessionStorage ⟶ [sessionStorage]
            window.localStorage ⟶ [localStorage]
            window.indexedDB ⟶ [indexDB]
            window.openDatabase ⟶ [openDB]
            navigator.plugins ⟶ [plugins]
            window.CanvasRenderingContext2D.prototype.rect ⟶ [canvas2D]
            window.WebGLRenderingContext.prototype.createBuffer ⟶ [webGL]

    p.text Every website tested has included a certain number of javascript, I was researching which is the behavior of the scripts and if we can measure their "invasiveness". This was the goal of the analysis: permit a more granular judgment script, understand if and how ad-blocker can improve, understand responsibilities of third-party platforms.
    p.text In the visualization below, 
        b Viz#3 
        | you can see all the [lettes] related to function the tool look for. The fist is always [cpu] and means we checked if (look the list above) 
        code navigator.cpuClass 
        | has been checked. If is reported [cpu ] means 0 times the function has been performed, if there is a red number, it represents the amount of time the domain name on the left has executed the function. Under the column 'href' you can see the tested website. The number of inclusion is far less than what we observe in the Viz#1 and Viz#2 because the scripts from the same domain share the same context in the browser, therefore should be aggregated. This analysis does not keep in account all the javascript inclusion which don't execute any of these functions.
       
    img.img-responsive(src="/images/PY-gob-fingerprint.png")
    p.text Few technical notes and insights inspired by the Paraguaian analysis:
    ul
        li When the inclusion has the name 
            code undefined  
            | is because was not possible, from the browser extension (a modified version of
            a(href="https://github.com/vecna/badger-claw") privacy-badger
            |) attribute the source. It may require more investigations.
        li 
            code senado.gov.py 
            |, the website of Paraguayan Senate, include 
            code n-cdn.areyouhuman.com  
            | which, is a captcha-like third-party service (
            a(href="https://www.distilnetworks.com") Distil Networks
            |). Fingerprinting from this kind of third-party is expected. In theory, they should ask an intensive human operation such a Captcha resolution only if technical analysis is inconclusive. Check your activity on the browser is one of the indicators which can be used to do such assessment. But the invi.sible.link do not even trigger any behavior, is not trying to post comments or perform an operation, is just retrieving the homepage and observing script behavior, passively. These invasive fingerprinting operation should happen when the user is expressing interest in posting a comment (such as entering text in the comment area), not when the page is open.
        li World-known platforms like Twitter are mixed with all the others: has not beed done a company-based attribution in this analysis.
        li This test is not checking the execution of 
            code XMLHttpRequest 
            | yet.

    img.img-responsive(src="/images/BR-gob-fingerprint.png")

    ul
        li a platform offering specialized services are justified to execute these javascript calls. maps.google.com which has to render an interactive map, call ten times window.devicePixelRatio doesn't matter if is 10 or 1, but looks legitimate the access to that information, because is in its scope render complex graphc. The same on youtube checking the plugins available.
        li It is interesting observing duplicated website (
            code http://www.caxia.gov.br
            |), looking closer, we can see the first the homepage and the second a content-page. This differencen will be extensively analyzed in the next chapter, but so far we can observe the presence of a 
            a(href="https://en.wikipedia.org/wiki/Personalized_marketing#DMP") Data Management Platform
            |  private firm (
            a(href="http://www.tail.digital/") d.tailtarget.com
            |, accessing to the browser
            code sessionStorage
            |.
        li The domain triggering more fingerprinting request is cloud.tinymce.com, which redirect to a page of a full-featured rich text editing, is an HTML WYSIWYG and therefore is used in many websites as a comfortable way to compose web pages. The site analyzed, do not offer any editing capability, the rich text editor is not offering any particular feature in exchange for the complete fingerprinting. Looking more in details, in the 
            a(href="https://www.ephox.com/legal/privacy/") privacy policy
            |, is written:
            ol
                li The cookies and other technical means, termporary or persistent, are not PII 
                li 
                    i We, or our third party service providers, collect and store certain other information automatically whenever you interact with the Site.  For example, we collect information regarding customer traffic patterns, site usage, hits to our server, Site, page views, query date and time, and navigational patterns
            | This seems to me one example, among others, which need further investigation from policy team.

    p.text You can 
        a(href="https://public.tableau.com/profile/claudio.of.tracking.exposed#!/vizhome/LatAminstitutionsjsfingerprintingfunctions/JS-Gob-BR") see the complete visualization
        |; the image above do not include all the sites present on the 
        a(href="https://github.com/vecna/gobwebsecpy/blob/master/lista_brasil.csv") Brasil CSV list

    img.img-responsive(src="/images/CL-gob-fingerprint.png")

    p.text Colombia list is long, the
        a(href="https://github.com/vecna/gobwebsecpy/blob/master/lista_colombia.csv") test is composed by 148 website
        |, follow 
        a(href="https://public.tableau.com/profile/claudio.of.tracking.exposed#!/vizhome/LatAminstitutionsjsfingerprintingfunctions/JS-Gob-CO") this link to the interactive visualization, and see the whole Colombian report
        |.

section
    h2 use invi.sible.link

    p.text Requirement: a Debian GNU/Linux computer in which invi.sible.link repository has been cloned and installed, as explained in the 
        a(href="https://github.com/vecna/invi.sible.link") GitHub page
        |.

    p.text you should have:
    ul
        li the CSV file with the website to test, take as example, the 
            a(href="https://github.com/vecna/gobwebsecpy ") repository used with Tedic, the CSVs are separated by country
            |.
        li Your campaign configured in 
            code config/campaign.json
            | look at the 
            a(href="https://github.com/vecna/invi.sible.link/blob/master/config/campaigns.json") current one
            |.
        li
            code npm run vigile
            |  this start the application which dispatch the site to be tested. It may be a bit overkill, but at the beginning I was supposed to invest more effort in compare the difference between a vantage point and another. The unreliability described at the end of previous chapter explain why is not happen.
        li
            code $ DEBUG=*,-lib:mongo:read bin/queueCampaign.js --csv campaigns/gobwebsecpy/lista_brasil.csv --campaign gob.brasil
            |  also, please note, all the scripts in bin/ were executed with  
            code DEBUG=*
            |  as environment variable, probably the communication of the toolchain is not tested enough to be without. The previous command add the sites with this kind of output:
            pre.
              lib:queue importSiteFromCSV: 27 entries in campaigns/gobwebsecpy/lista_brasil.csv +0ms
              lib:queue importSiteFromCSV imported 26 sites +9ms
              lib:queue added [gob.brasil] 26 promises +752ms
        li
            code npm run chopstick
            |  this pull from vigile the webiste to test and perform the analysis. this can run in different, separated, boxes
        li
            code npm run

    p.text The system is configured to perform analysis when they are in the queue; my configuration was causing the system to repeat the same collection every 24 hours.
    p.text
        b To retrieve the data
        | from the server, are available HTTP API. For this specific campaign, you can check this 
        a(href="https://github.com/vecna/gobwebsecpy/blob/master/API.md") dedicated page
        |, as the example show:
    pre.
        user@user:~/invi.sible.link$ http https://invi.sible.link/api/v1/details/gob.brasil
        [
           {
                "acquired": "2018-03-23T03:22:54.741Z",
                "campaign": "gob.brasil",
                "href": "https://nfg.sefaz.rs.gov.br/Cadastro/CadastroNfg_2.aspx",
                "id": "eb43cb853cf3fd98084981a8d89aff7e3c1efbd8",
                "inclusion": "www.gstatic.com",
                "navigator_userAgent": 1,
                "subjectId": "1faf654c7f8277e94d71e65a5f31820b6f99672a",
                "version": 1,
                "when": "2018-03-23T00:00:00.000Z"
           },
           {
                "acquired": "2018-03-23T03:22:54.741Z",
                "campaign": "gob.brasil",
                "href": "https://nfg.sefaz.rs.gov.br/Cadastro/CadastroNfg_2.aspx",
                "id": "eb43cb853cf3fd98084981a8d89aff7e3c1efbd8",
                "inclusion": "tag.navdmp.com",
                "subjectId": "1faf654c7f8277e94d71e65a5f31820b6f99672a",
                "version": 1,
                "when": "2018-03-23T00:00:00.000Z",
                "window_localStorage": 6
            }
        …
        ]

    h3 Format specification of the API 
        i details
    p.text This API returns a number of JSON objects equal to the amount of third party inclusion which executed javascript functions. The objects comes from the last cycle of analysis; In my case, every day is a different cycle because every 24 hours a command 
        code queueCampaign 
        |  push the list of sites in the queue again. If you want to make a comparison between days, you should save the results separately. The JSON objects have some fixed fields, they are:
    ul
        li “inclusion”: Is the domain name of the third-party inclusion (such as google-analytics.com).
        li “href”: the website tested.
        li “campaign”: the name of the campaign, it is the same specified with the command 
            code campaignQueue
            |.
        li “when”: the ISO date is in format YYYY-MM-DD, it describes the day in which the test was planned (hours is always midnight).
        li “acquired”: the precise time, in ISO format, when the test has been performed by the testing script. Please note, if this information is public, the IP address of the invi.sible.link server could be correlated by who can look in the logs of the tested websites and their third-party inclusions. invi.sible.link activities are not anonymous if the API is publicly accessible.

    p.text Each of the javascript function (with the 
        code . 
        | replaced by 
        code _ 
        | in the key name, and as value, the number of times the 
        i potentially-profiling
        |  javascript function has been invoked.

.container-fluid
    h3 Conclusions
    include footer
